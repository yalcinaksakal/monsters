{"version":3,"sources":["components/card/Cards.module.css","components/search/Search.module.css","components/card/Card.js","components/card/Cards.js","components/search/Search.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Card","monster","className","styles","card","alt","src","id","name","email","toLowerCase","Cards","monsters","cards","length","map","Search","searchHandler","placeholder","useState","filter","setFilter","lastSearchedText","setLastSearchedText","useEffect","inputTimer","setTimeout","clearTimeout","search","value","onChange","e","target","trim","type","App","monsterList","setMonsters","filteredMonsters","setFMonsters","isLoading","setIsLoading","useCallback","filterText","includes","fetch","then","res","json","data","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,KAAO,oBAAoB,MAAQ,uB,kBCAlFD,EAAOC,QAAU,CAAC,OAAS,yB,+JCQZC,EAPF,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACX,sBAAKC,UAAWC,IAAOC,KAAvB,UACE,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BL,EAAQM,GAAlC,eACtB,4BAAIN,EAAQO,OACZ,mBAAGN,UAAWC,IAAOM,MAArB,SAA6BR,EAAQQ,MAAMC,oBCMhCC,EATD,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACZ,qBAAKV,UAAWC,IAAOU,MAAvB,SACGD,EAASE,OACRF,EAASG,KAAI,SAAAd,GAAO,OAAI,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQM,OAE3C,6C,gBCkBSS,EAxBA,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,cAAeC,EAAkB,EAAlBA,YAAkB,EACrBC,mBAAS,IADY,mBAC1CC,EAD0C,KAClCC,EADkC,OAEDF,mBAAS,IAFR,mBAE1CG,EAF0C,KAExBC,EAFwB,KAcjD,OAVAC,qBAAU,WACR,IAAMC,EAAaC,YAAW,WAExBN,IAAWE,IACbC,EAAoBH,GACpBH,EAAcG,EAAOV,kBAEtB,KACH,OAAO,kBAAMiB,aAAaF,MACzB,CAACL,EAAQH,EAAeK,IAEzB,uBACEpB,UAAWC,IAAOyB,OAClBC,MAAOT,EACPU,SAAU,SAAAC,GAAC,OAAIV,EAAUU,EAAEC,OAAOH,MAAMI,SACxCC,KAAK,SACLhB,YAAaA,KCsBJiB,MAvCf,WAAgB,IAAD,EACsBhB,mBAAS,IAD/B,mBACNiB,EADM,KACOC,EADP,OAE4BlB,mBAAS,IAFrC,mBAENmB,EAFM,KAEYC,EAFZ,OAGqBpB,oBAAS,GAH9B,mBAGNqB,EAHM,KAGKC,EAHL,KAIPxB,EAAgByB,uBACpB,SAAAC,GACEJ,EACEH,EAAYhB,QAAO,SAAAnB,GAAO,OACxBA,EAAQO,KAAKE,cAAckC,SAASD,SAI1C,CAACP,IAcH,OAXAZ,qBAAU,WACRiB,GAAa,GACbI,MAAM,8CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJZ,EAAYY,GACZV,EAAaU,GACbR,GAAa,QAEhB,IAGD,sBAAKvC,UAAU,MAAf,UACE,0CACA,cAAC,EAAD,CAAQe,cAAeA,EAAeC,YAAY,oBACjDsB,EACC,mBAAGtC,UAAU,OAAb,iCAEA,cAAC,EAAD,CAAOU,SAAU0B,QC1BVY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBN,MAAK,YAAkD,IAA/CO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d0236c37.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"Cards_cards__3J_sn\",\"card\":\"Cards_card__2_W59\",\"email\":\"Cards_email__2eU80\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__34_QL\"};","import styles from \"./Cards.module.css\";\r\n\r\nconst Card = ({ monster }) => (\r\n  <div className={styles.card}>\r\n    <img alt=\"monster\" src={`https://robohash.org/${monster.id}?set=set2`} />\r\n    <p>{monster.name}</p>\r\n    <p className={styles.email}>{monster.email.toLowerCase()}</p>\r\n  </div>\r\n);\r\nexport default Card;\r\n","import Card from \"./Card\";\r\nimport styles from \"./Cards.module.css\";\r\n\r\nconst Cards = ({ monsters }) => (\r\n  <div className={styles.cards}>\r\n    {monsters.length ? (\r\n      monsters.map(monster => <Card key={monster.id} monster={monster} />)\r\n    ) : (\r\n      <p>Not found</p>\r\n    )}\r\n  </div>\r\n);\r\nexport default Cards;\r\n","import { useEffect, useState } from \"react\";\r\nimport styles from \"./Search.module.css\";\r\nconst Search = ({ searchHandler, placeholder }) => {\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [lastSearchedText, setLastSearchedText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const inputTimer = setTimeout(() => {\r\n      // filter's value is the value .5s ago, compare it with the current value and decide whether user stopped writing or not\r\n      if (filter !== lastSearchedText) {\r\n        setLastSearchedText(filter);\r\n        searchHandler(filter.toLowerCase());\r\n      }\r\n    }, 500);\r\n    return () => clearTimeout(inputTimer);\r\n  }, [filter, searchHandler, lastSearchedText]);\r\n  return (\r\n    <input\r\n      className={styles.search}\r\n      value={filter}\r\n      onChange={e => setFilter(e.target.value.trim())}\r\n      type=\"search\"\r\n      placeholder={placeholder}\r\n    />\r\n  );\r\n};\r\nexport default Search;\r\n","import { useCallback, useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Cards from \"./components/card/Cards\";\nimport Search from \"./components/search/Search\";\n\nfunction App() {\n  const [monsterList, setMonsters] = useState([]);\n  const [filteredMonsters, setFMonsters] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const searchHandler = useCallback(\n    filterText => {\n      setFMonsters(\n        monsterList.filter(monster =>\n          monster.name.toLowerCase().includes(filterText)\n        )\n      );\n    },\n    [monsterList]\n  );\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(res => res.json())\n      .then(data => {\n        setMonsters(data);\n        setFMonsters(data);\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>MONSTERS</h1>\n      <Search searchHandler={searchHandler} placeholder=\"Search monsters\" />\n      {isLoading ? (\n        <p className=\"bump\">Loading monsters...</p>\n      ) : (\n        <Cards monsters={filteredMonsters} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}